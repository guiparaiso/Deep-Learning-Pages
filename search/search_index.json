{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Exerc\u00edcios de Perceptron","text":"<p>Bem-vindo! Aqui est\u00e3o os exerc\u00edcios de perceptron.</p> <ul> <li>Exercise 1</li> <li>Exercise 2</li> </ul>"},{"location":"exercise1/data_generation/","title":"Exercise 1 \u2014 Data Generation Task","text":"<p>Gere duas classes de dados bidimensionais (1000 amostras por classe) usando distribui\u00e7\u00e3o normal multivariada:</p> <ul> <li>Classe 0: m\u00e9dia = [1.5, 1.5], covari\u00e2ncia = [[0.5, 0], [0, 0.5]]</li> <li>Classe 1: m\u00e9dia = [5, 5], covari\u00e2ncia = [[0.5, 0], [0, 0.5]]</li> </ul> <p>Plote os pontos, colorindo por classe, para visualizar a separa\u00e7\u00e3o.</p>"},{"location":"exercise1/pp.implementation/","title":"Exercise 1 \u2014 Perceptron Implementation Task","text":"<p>Implemente um perceptron single-layer do zero...</p> <ul> <li>Inicialize pesos w (vetor 2D) e bias b  </li> <li>Use learning rate \u03b7 = 0.01  </li> <li>Regra de update: para cada amostra mal classificada (x, y):   w = w + \u03b7 * y * x   b = b + \u03b7 * y  </li> <li>Treinamento at\u00e9 converg\u00eancia ou m\u00e1ximo de 100 \u00e9pocas  </li> <li>Plote fronteira de decis\u00e3o, acur\u00e1cia por \u00e9poca, etc.</li> </ul>"}]}